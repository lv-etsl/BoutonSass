// le fichier général de bouton

// on mets certains dont box-sizing

/*******************************************************************************
*
* GENERAL // TO DELETE
*
*******************************************************************************/

*{box-sizing:border-box;}
body {
  margin: 0;
  padding: 0;
}

/*******************************************************************************
*
* BUTTON
*
*******************************************************************************/
// Configuration variables
// Type name | color scheme

// VARIABLES

// STATIC
$btn-padding:           0.5rem;
$btn-margin:            0.5rem;
$btn-boder-radius:      0.15rem;
$btn-border:            1px solid;
$btn-text-align:        center;
$btn-text-decoration:   none;

// STATIC TRANSITION
$btn-transition: 0.4s;


// MAP COLOR

$mesCouleurs-types: (
  '' :        rgba(255, 111, 97, 1), // on entre pas de valeur poour un bouton par défaut !! ca fonctionne, pas sur que ce soit juste
  -error :    #b94a48, // on met le - ici et non pas dans le btn-
)!default;

$mesLiens-types: (
  '' :        rgba(59, 113, 178, 1), // on entre pas de valeur poour un bouton par défaut !! ca fonctionne, pas sur que ce soit juste
  -error :    invert(#b94a48), // on met le - ici et non pas dans le link-
)!default;

// Placeholder pour valeurs statiques
%mesCouleurs {
  display: block;
  padding: $btn-padding;
  margin: $btn-margin;
  border-radius: $btn-boder-radius;
  border: $btn-border;
  text-align: $btn-text-align;
  text-decoration: $btn-text-decoration;
  -webkit-transition-duration: $btn-transition;// safari
  transition-duration: $btn-transition;
  > a {
    display: block;
    text-decoration: $btn-text-decoration;
  }
}

// Mixin for dynamic values
// Extending the placeholder
@mixin mesCouleurs($color) {
  @extend %mesCouleurs;
  color: $color;
  background: lighten($color, 20%);
  border-color: lighten($color, 20%);
}

// Loop doing all the dumping
@each $type, $color in $mesCouleurs-types {
  .btn#{$type} {
    @include mesCouleurs($color);

      &:hover {
        color: desaturate($color, 100%);
        background-color: saturate($color, 50%);
        border-color: saturate($color, 50%);
      }
  }
}

// mixin pour les liens
@mixin mesLiens($liens) {
  color: $liens;
}

@each $type, $liens in $mesLiens-types {
  .btn#{$type} a {
  @include mesLiens($liens);

    &:hover {
      color: darken($liens, 50%);
    }

}
}
